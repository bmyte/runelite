package net.runelite.cache.songplayer;

import net.runelite.cache.Cache;
import net.runelite.cache.ConfigType;
import net.runelite.cache.IndexType;
import net.runelite.cache.definitions.EnumDefinition;
import net.runelite.cache.definitions.TrackDefinition;
import net.runelite.cache.definitions.loaders.EnumLoader;
import net.runelite.cache.definitions.loaders.TrackLoader;
import net.runelite.cache.fs.Archive;
import net.runelite.cache.fs.ArchiveFiles;
import net.runelite.cache.fs.Index;
import net.runelite.cache.fs.Store;
import net.runelite.cache.fs.Storage;
import net.runelite.cache.fs.FSFile;
import net.runelite.cache.util.Djb2Manager;
import javax.sound.midi.InvalidMidiDataException;
import javax.sound.midi.MidiEvent;
import javax.sound.midi.MidiSystem;
import javax.sound.midi.MidiUnavailableException;
import javax.sound.midi.Sequence;
import javax.sound.midi.Sequencer;
import javax.sound.midi.ShortMessage;
import javax.sound.midi.Track;
import javax.sound.sampled.LineUnavailableException;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class MidiTrackPlayer
{
	private static boolean dump_tracks = false;

	private static int[] SONG_NAME_HASHES =
	{
		1880989696, 358, -1, -1, -1, -1, 95848451, 327, -1, -1,
			-683526139, 477,
			1029455878, 4,
			-1665011705, 301,
			196677638, 413,
			740392969, 632,
		-1, -1, -1, -1, -1, -1, -691855347, 370, -1, -1, -1, -1, -1, -1, -1, -1, 1202794514, 56, -1, -1, -1, -1, -1, -1, -1, -1, 1691516951, 214,
		-1624274920, 138, 1825640471, 291, -1, -1, -1380919269, 132,
			2001821724, 639, // forthos_dungeon
			-1763090403, 458,
			-771284962, 373,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-1482676188, 335,
		-1, -1, -1, -1, -1, -1, -1, -1, 1728911401, 245, -564582358, 501, 1381363755, 203, -1, -1, -1, -1, -1, -1, -1,
		-1, 2124773424, 351, -1, -1, -1, -1, -759203789, 613, -1, -1, 368271413, 532, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
		-40521666, 86, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2136164423, 621, -1, -1, -1, -1, -1, -1, 790067275, 229, -1, -1,
		-1686202291, 492, -1, -1,
			-2012159921, 438, // drunken dwarf
		-1, -1, -2091564975, 682, -1, -1, -1110089645, 542, 279431252, 228, -1588113323, 402, 957931606, 178,
			-1042007977, 219, // peng_plans_jingle
			344336468, 520,
		-1, -1, -1, -1,
			-1624760229, 148,
			965242971, 572, // verzik combat
		-1, -1, -1, -1,
			-1126455201, 518, // gargoyleboss
			941457503, 626,
			-995428255, 93,
			237156449, 642,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-1683079062, 538, // autumn in bridgelum
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-742899599, 605, // battlefront
		-1, -1,
			-732051341, 551, // shayzien crypt
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			563269755, 339,
			-905842564, 52,
		-1, -1,
			1609255038, 510,
		-1, -1, -1, -1,
			-1294172031, 17,
			-747874174, 649,
		-1, -1,
			1134405764, 384,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			812298380, 601, // hespori
		-1, -1, -1, -1,
			2097127567, 468,
		-1, -1, -1, -1, -1, -1,
			347955347, 75,
		-1, -1,
			1529837717, 489,
			-1957803883, 514,
		-1, -1,
			-1839593320, 671,
		-1, -1,
			-1256560486, 474,
			-606457701, 189,
		-1, -1,
			415928477, 446,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			879650982, 581, // sotetseg combat
		-1, -1,
			-1658386264, 429,
		-1, -1, -1, -1, -1, -1, -1, -1,
			869816493, 579, // nylocas combat
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			744536246, 587,
		-1, -1,
			1921157304, 410, // lost tribe cutscene
			-1052794696, 560,
			1145637049, 582, // verzik defeated
		-1, -1, -1, -1, -1, -1, -1, -1,
			1533565119, 534,
			1994744000, 281,
			1143353537, 63,
		-1, -1, -1, -1, -1,
		-1, -1, -1,
			-1573228346, 368, // observatory telescope cutscene
		-1, -1, -1, -1, -1, -1,
			-1779111734, 19,
		-1, -1, -1, -1, -1, -1,
			-1913214770, 435,
			-1980407601, 210,
		-1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 107944162, 158, -1, -1, -1, -1, -1,
		-1,
			1048381670, 550, // myths guild
		-1, -1, -1, -1,
			122265833, 41,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			104077551, 628, // molch
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-1124681475, 472,
		-1, -1, -1, -1, -1, -1,
			-485932799, 153,
		-1, -1, -1, -1, -1, -1, -1, -1,
			696768774, 76, // harmony
		-1, -1, -1, -1, -1, -1, -1, -1,
			2023201035, 310,
		-1, -1, -1, -1, -1, -1,
			-143163121, 638,
		-1, -1, -1, -1,
			-213632750, 82,
		-1, -1, -1, -1, -1, -1,
			-860755690, 453,
		-1, -1, -1, -1, -1, -1, -1, -1,
			-1094248165, 640,
			1306691868, 70,
		-1, -1,
			-353951458, 180,
			-338347745, 311,
			693567775, 480, // mined out
		-1, -1,
			306819362, 259,
		-1, -1,
			819884324, 42,
			819884325, 43,
		-1, -1, -1, -1, -1, -1,
			73828649, 356,
			656316714, 597,
		-1, -1, -1, -1,
			1765722413, 462,
		-1, -1, -1, -1,
			-2032107216, 257,
		-1, -1, -1, -1,
			685934899, 511,
		-1, -1,
			-1032629963, 353,
		-1, -1,
			-1349658313, 195, // delrith summoning
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			1711341885, 375,
		-1, -1, -1, -1, -1, -1, -1, -1,
			1124565314, 295,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-783693496, 380,
		-1, -1, -1, -1, -1, -1,
			1318893900, 217,
			1687654733, 183,
			-1061250740, 227, // fris_jingle_1
			-1891851953, 220,
			62757197, 536, // zombie dragon
			2001170767, 662, // zalcano_combat
		-1, -1, -1, -1, -1, -1, -1, -1,
			899275094, 590, // weiss_town
		-1, -1,
			796868952, 222,
		-1, -1, -1, -1,
			1086036315, 89,
		-1, -1, -1, -1,
			3314014, 287,
		-1, -1, -1, -1, -1, -1, -1, -1,
			-1228279453, 91,
			212205923, 313,
		-1, -1,
			-1320617626, 173,
			-677662361, 98,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			1581724013, 467,
			-826562194, 421,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-1172405897, 8,
		-1, -1, -1, -1,
			582140282, 274,
			1949747579, 670,
			1683908988, 569, // maiden combat
		-1, -1, -1, -1, -1, -1,
			-1254483584, 114,
			-1254483583, 115,
			-1254483582, 117,
			1473393027, 23,
			-1829469821, 197,
			-650944128, 391,
		-1, -1,
			35762567, 15,
		-1, -1,
			-599680631, 602,
		-1, -1, -1, -1,
			1033441676, 162,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-140492390, 437,
			1097468315, 18,
		-1, -1, -1, -1, -1, -1,
			429244831, 201,
		-1, -1, -1, -1, -1, -1,
			-787164765, 645, // warped_library
			849596836, 139,
		-1, -1, -1, -1,
			30362023, 493, // olm_battle
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1640556978, 81, -1, -1, -1, -1, -1, -1, -901674570, 271, -1, -1, -1, -1, 187351481, 556,
		-1, -1,
			1234827707, 37,
			271319484, 294,
			-1751139908, 483, // wintertodt_boss
			-74307138, 284,
			-1095396929, 269,
			910299584, 149,
			-1082154559, 72,
			-95571520, 225,
			-499867199, 254,
			-1282090556, 118,
			1808345541, 414,
			-1453405761, 502,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			478781900, 546,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-1028580907, 440,
		-1, -1,
			-926977577, 541,
		-1, -1,
			-1646255655, 657, // prif_slayer_dungeon
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			687938017, 428,
		-1, -1,
			1837251043, 365,
			1121239524, 332,
		-1, -1, -1, -1, -1, -1,
			-1522984472, 486,
			1344608745, 554,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-544722449, 289,
			-1060046352, 94,
			-78220817, 424,
			1749113330, 62,
			1915718129, 461,
		-1, -1, -1, -1, -1, -1,
			1345432055, 614,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			300077565, 675,
		-1, -1,
			-2098286081, 45,
			-103077377, 112,
			881850881, 425,
			-1846853118, 404,
			1936130561, 433,
			-2136059388, 108,
			817472004, 238,
			-1165315580, 309,
			111485446, 323,
			-2134967800, 198,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-1665005042, 603,
			-1392319985, 100,
			-791905777, 680,
		-1, -1,
			-1349119470, 59,
		-1, -1, -1, -1,
			-2053039595, 608,
		-1, -1,
			-324496873, 80,
			-56804840, 255,
		-1, -1, -1, -1,
			-1857025509, 267,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			1006643748, 205,
		-1, -1, -1, -1,
			528722471, 306,
		-1, -1,
			647234089, 610,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-1793433037, 250, // surok_king_battle_music
		-1, -1, -1, -1,
			-1475251658, 620,
			813726263, 181,
			1320694328, 184,
		-1, -1, -1, -1,
			82917947, 490,
			619237947, 630,
			1326424637, 407,
			-925031874, 53,
		-1, -1,
			-1055503808, 204,
		-1, -1,
			1213477442, 575,
			103666243, 328,
		-1, -1, -1, -1,
			-1658514874, 206,
		-1, -1,
			1801140808, 504,
		-1, -1,
			-1216167350, 182,
			-2084720053, 652, // the dark fragment
		-1, -1, -1, -1, -1, -1,
			1968917071, 266,
		-1, -1, -1, -1, -1, -1,
			-1307362733, 552,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			1960215130, 345,
		-1, -1, -1, -1, -1, -1, -1, -1,
			795515487, 179,
		-1, -1, -1, -1, -1, -1, -1, -1,
			1958759012, 116,
			-1066798491, 38,
			-1388440987, 566, // verzik ambience
			-1998869913, 11,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-858121616, 473,
			-521895311, 401, // the adventurer
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-645977478, 321,
			-1642689926, 415, // athletes foot
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-1381531001, 591,
		-1, -1,
			-1367483767, 68,
			-848436598, 119,
			1364992651, 411,
			286265996, 318,
			-1354286452, 678, // vanstrom
		-1, -1,
			1945133711, 500,
			-418223472, 354,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			2122572442, 133,
			-651951461, 346,
		-1, -1, -1, -1, -1, -1, -1, -1,
			432605856, 300,
			-946130271, 596, // hespori cave
		-1, -1,
			201458339, 617,
			907815588, 79,
		-1, -1, -1, -1,
			-1691854169, 476,
			-2048535896, 419,
			-960709976, 537,
			-440204630, 73,
			1389384362, 457,
			404357804, 268,
			-359173459, 399,
			359174830, 491,
		-1, -1, -1, -1, -1, -1, -1, -1,
			-492926285, 349,
		-1, -1, -1, -1, -1, -1,
			1802291895, 83,
			1310667448, 539,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-1010529595, 315, // impetuous_clue
			1510693574, 672,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			1966766798, 156,
			-312706353, 561,
			1264132816, 107,
			-2124107058, 650,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			1769177816, 172,
		-1, -1, -1, -1, -1, -1,
			-1725263140, 583,
			586023644, 661,
		-1, -1,
			1480073951, 385, // kr_betray_jingle
		-1, -1, -1, -1,
			-43136286, 643,
		-1, -1, -1, -1,
			1286329061, 609,
		-1, -1, -1, -1, -1, -1,
			-675357975, 24,
			-675357974, 25,
			-675357973, 26,
			-675357972, 27,
			-675357971, 28,
			-675357970, 29,
			-1779684630, 57,
			-1860080918, 96,
			-1073927447, 388,
			40246002, 340,
			-309570839, 426,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-398925062, 35,
		-1, -1, -1, -1,
			95734525, 600,
		-1, -1, -1, -1,
			284766976, 77,
			-1355255040, 665,
		-1, -1, -1, -1, -1, -1,
			1465443077, 447,
		-1, -1, -1, -1, -1, -1, -1, -1,
			-180851958, 223,
			-1019905269, 286,
		-1, -1,
			1124498189, 427,
		-1, -1,
			518814479, 20,
		-1, -1, -1, -1,
			1267356434, 398,
		-1, -1, -1, -1, -1, -1, -1, -1,
			1258863383, 145,
			284435223, 505,
			-1825588455, 484, // bobs on holiday
			-943885542, 207,
			278424344, 666,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-895763669, 333,
		-1, -1, -1, -1,
			-1522236626, 647, // city_guardians
		-1, -1, -1, -1, -1, -1, -1, -1,
			-148552909, 361,
		-1, -1, -1, -1,
			908430134, 336,
		-1, -1, -1, -1, -1, -1,
			-1106570438, 66,
		-1, -1, -1, -1, -1, -1, -1, -1,
			-1043985601, 508,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-1487348923, 90,
			-356730043, 211,
			506944327, 673,
			530068296, 7,
			506944328, 668,
		-1, -1, -1, -1,
			1116844876, 519,
			1343200077, 341,
			-90350772, 524,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-1657478315, 653,
			-2038936746, 278,
			-1951786153, 154,
			-448773288, 627,
			346288985, 249,
			800455509, 656,
		-1, -1, -1, -1,
			133626717, 308,
		-1, -1, -1, -1,
			332368736, 264,
		-1, -1, -1, -1, -1, -1, -1, -1,
			-993528987, 544,
			919126885, 648,
		-1, -1,
			2061491048, 120,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-1413948561, 655, // amlodd
		-1, -1, -1, -1, -1, -1,
			394756979, 547,
		-1, -1, -1, -1,
			-957019274, 386,
		-1, -1,
			788224888, 84,
		-1, -1, -1, -1,
			1294629755, 633,
		-1, -1,
			345324413, 39, // church music 1
			345324414, 40, // church music 2
			-1737897091, 553,
		-1, -1, -1, -1, -1, -1,
			115411843, 314,
		-1, -1, -1, -1, -1, -1,
			-1197347961, 235,
		-1, -1, -1, -1, -1, -1,
			2103661451, 221,
		-1, -1,
			2032696205, 545,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-429593707, 135,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			1523653533, 334,
			738909086, 282,
		-1, -1,
			-988841056, 111,
			408585121, 527, // dragonkin ambience
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-874529881, 383,
		-1, -1, -1, -1, -1, -1,
			-1282174037, 592,
		-1, -1, -1, -1,
			-1779127378, 123,
			-1779127377, 124,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			944208821, 631,
		-1, -1, -1, -1, -1, -1, -1, -1,
			72999866, 517,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			1814287296, 455,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -586830894, 526, -1, -1, -1, -1, -1, -1, -1, -1, 1119460311, 408, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-1904094243, 450,
		-1, -1,
			686705631, 74,
			1586342879, 218, // peng_bards_jingle
			-1989106719, 604,
		-1, -1, -1, -1, -1, -1, -1, -1,
			685190118, 530,
		-1, -1,
			-816227352, 85,
			747848680, 422,
		-1, -1,
			221109227, 397,
		-1, -1,
			1333935085, 360,
			1740872686, 444,
			105001967, 58,
			-2065077267, 475,
			-895939599, 175,
			-2037963792, 584, // sotetseg ambience
			389972979, 503, // Lagoon (key unk)
			-2002535437, 509,
		-1, -1, -1, -1, -1, -1,
			564620280, 562,
			1503566841, 121,
			-734206983, 186,
			123560953, 216,
			-200702983, 485,
			2110260221, 464,
			1643875326, 463,
			1826933756, 667,
			-728886272, 376,
			-1377700863, 3,
			621171714, 330,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-339706871, 431,
		-1, -1, -1, -1, -1, -1,
			-1106574323, 293,
		-1, -1, -1, -1, -1, -1,
			827249681, 224,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-528815081, 629,
		-1, -1,
			-663428071, 381,
		-1, -1, -1, -1,
			201526300, 430, // corporealbeast
			-1268786147, 251,
		-1, -1,
			-810515425, 32,
			788399136, 130,
		-1, -1,
			2014802978, 585,
			1976894499, 143,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			3165239, 159,
			-12868552, 92,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-1644401602, 142,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-956253112, 525,
		-1, -1, -1, -1, -1, -1,
			1710400588, 232,
			-877351859, 307,
		-1, -1,
			46273615, 395,
		-1, -1, -1, -1, -1, -1, -1, -1,
			1372894292, 663, // nightmare_combat
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-1025233830, 303,
			96463963, 69,
		-1, -1,
			1574724701, 681,
			-1081494434, 559,
		-1, -1, -1, -1,
			441740385, 646,
			104080482, 10,
			109757538, 151,
		-1, -1, -1, -1, -1, -1, -1, -1,
			1512143976, 586,
			1080306793, 488, // shayzien_march
		-1, -1, -1, -1, -1, -1,
			686441581, 113,
			789609582, 194,
			-839455633, 67,
			260940912, 261,
			-665666447, 237,
		-1, -1, -1, -1, -1, -1, -1, -1,
			79789174, 348,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			28034174, 660,
		-1, -1, -1, -1,
			1393517697, 263,
		-1, -1, -1, -1,
			280241284, 622,
			-999707515, 369,
		-1, -1, -1, -1, -1, -1,
			615365769, 280, // slice of grand opening
			798909577, 589, // my2arm_love_theme_full
		-1, -1,
			1846633612, 33,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-528864109, 169,
			-419218284, 12,
		-1, -1, -1, -1, -1, -1,
			-1931522920, 685,
		-1, -1, -1, -1,
			-1842191205, 196, // wally cutscene
		-1, -1, -1, -1, -1, -1,
			907740319, 606,
			-1526440800, 136,
			2092627105, 147, // silence
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			1532279978, 21,
		-1, -1,
			460367020, 61,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-271106892, 482,
			1854274741, 362,
			-1601127242, 299,
		-1, -1, -1, -1,
			1250935993, 448,
			697382073, 567, // xarpus ambience
		-1, -1, -1, -1, -1, -1, -1, -1,
			-28982081, 213,
			-511685441, 522,
		-1, -1,
			1327467714, 507,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-84626226, 515,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-552301350, 191,
			-395250469, 418,
			-1408684838, 494,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			1263256805, 226,
		-1, -1,
			1274780903, 71,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			777534707, 160,
		-1, -1, -1, -1, -1, -1,
			669250807, 523,
		-1, -1, -1, -1, -1, -1,
			-705938181, 146,
		-1, -1, -1, -1, -1, -1, -1, -1,
			-1077789440, 193,
			-662489856, 558,
			658928897, 683,
			898010371, 231,
			-750127868, 36,
		-1, -1, -1, -1, -1, -1, -1, -1,
			1235442953, 364,
		-1, -1,
			-1057729269, 212, // barbarian assault tutorial
			-1679325940, 296,
		-1, -1,
			1868377358, 487,
			250959119, 304,
		-1, -1, -1, -1,
			-587569902, 393,
		-1, -1,
			-490773228, 233,
			951530772, 258,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			549358875, 104,
		-1, -1, -1, -1, -1, -1, -1, -1,
			-1309055712, 270,
		-1, -1,
			-808772318, 469,
		-1, -1, -1, -1,
			1787618597, 292,
			1411067174, 101,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-1332194002, 324,
		-1, -1, -1, -1,
			-1562452687, 285,
			1817249074, 529,
		-1, -1,
			192519476, 686,
		-1, -1, -1, -1,
			1966781751, 439,
		-1, -1,
			93330745, 248,
		-1, -1,
			1827366203, 262,
		-1, -1, -1, -1, -1, -1,
			-2133902017, 456,
		-1, -1,
			851641665, 576,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			1999746381, 344,
			981183822, 44,
			-1918044851, 577,
		-1, -1, -1, -1, -1, -1, -1, -1,
			-276138668, 279,
		-1, -1, -1, -1, -1, -1,
			-440187560, 392,
			1041911129, 244,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			580384095, 479,
		-1, -1,
			-1307116191, 265,
			1498787169, 406, // sailing journey2
			-1304031901, 215, // lotr_jingle_3
		-1, -1,
			-2075972251, 161,
		-1, -1,
			-89244313, 390,
			-1479412376, 316,
			828650857, 2,
			-1789903512, 535,
			109407595, 122,
		-1, -1, -1, -1,
			-1776024210, 495,
			584643951, 253,
		-1, -1,
			-967559823, 234,
		-1, -1, -1, -1, -1, -1,
			-1526067851, 272,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			1509070203, 366,
			-1455241861, 528,
		-1, -1,
			1513246078, 50,
		-1, -1,
			1306461568, 241,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			3392903, 171, // null
		-1, -1, -1, -1,
			-1220055670, 571, // pestilent bloat combat
		-1, -1,
			-47057524, 60,
			-1960860275, 141,
		-1, -1, -1, -1, -1, -1, -1, -1,
			-454421102, 322,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-31416935, 199, // jormungand fight
			2142215577, 200,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-953752155, 635,
		-1, -1,
			1120636327, 144,
		-1, -1, -1, -1,
			3016106, 563,
			-1059680853, 192,
			437480876, 30,
		-1, -1,
			-1858265682, 343,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-934797897, 78,
		-1, -1, -1, -1, -1, -1,
			-939588165, 555,
			-182209093, 664, // slepe dungeon
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-751102526, 55,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			949634504, 150,
			110327241, 109,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			1092249049, 568,
		-1, -1, -1, -1, -1, -1,
			364185053, 533,
		-1, -1,
			-1189743137, 47,
		-1, -1, -1, -1,
			155289058, 405, // giant dwarf meeting
		-1, -1, -1, -1,
			2013967845, 513,
			623451622, 451,
		-1, -1, -1, -1, -1, -1, -1, -1,
			1131171307, 394,
			736568812, 152,
			794539501, 230,
			-1623296531, 466, //scape ground
			1717999087, 436,
			-282886672, 454,
			1179379180, 496,
			-1081041422, 260,
			-222450192, 549, // dragonkin temple
		-1, -1, -1, -1, -1, -1, -1, -1,
			386188792, 521,
			1030045177, 236,
		-1, -1, -1, -1,
			-1055035908, 540,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-1567437308, 288,
		-1, -1, -1, -1, -1, -1,
			-1902858744, 417,
		-1, -1, -1, -1,
			1427043851, 302,
			-1237289460, 128,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-1564148198, 297, // etcetera theme
			1652745754, 378,
			-634763748, 347,
			673424924, 625,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-520702427, 87,
			214634021, 612,
		-1, -1, -1, -1, -1, -1,
			-1253085654, 423,
			783525419, 615,
			825974316, 317,
		-1, -1, -1, -1,
			-822106577, 208,
		-1, -1, -1, -1, -1, -1, -1, -1,
			1160873524, 497,
			-1253087691, 125,
		-1, -1,
			1395994167, 580, // nylocas ambience
			445640248, 445,
			-900633031, 157,
			-850506182, 51,
			-710515142, 573,
		-1, -1,
			289742397, 64,
		-1, -1,
			2145539647, 598, // alchemical hydra
		-1, -1,
			465278529, 420,
		-1, -1, -1, -1,
			1121125956, 54,
			1427539525, 239, // brain_barrelchest_battle
			94944838, 659, // cryws
		-1, -1, -1, -1, -1, -1, -1, -1,
			-710537653, 9,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			1020264019, 588,
		-1, -1, -1, -1, -1, -1,
			862821975, 372,
			-1350228392, 243,
		-1, -1, -1, -1,
			92909147, 102,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-908183966, 352,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-895977880, 387,
		-1, -1, -1, -1, -1, -1, -1, -1,
			-614076819, 5,
			-2075333010, 168,
			986170990, 623,
			-1870786963, 674, // hallowed sepulchre
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-969918857, 155,
			-850395529, 611,
		-1, -1, -1, -1,
			-327707013, 305,
			-1764950404, 331,
			-649484675, 396,
		-1, -1, -1, -1, -1, -1, -1, -1,
			-865479038, 165,
		-1, -1,
			2042596996, 512,
			-333224315, 99,
			1814277765, 252,
			-693313916, 634,
		-1, -1, -1, -1,
			-51091830, 174,
			-1237461365, 246,
			-2099722614, 357,
			1509400204, 359,
		-1, -1,
			3059343, 432,
			1650323088, 88,
			812947089, 166,
			812947090, 167,
			-1947119982, 498,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-303898981, 337,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			848123561, 412,
		-1, -1, -1, -1,
			1531147948, 574, // fairy dragon cutscene
			-795140435, 49,
			-919642451, 209,
			378300078, 283,
			-1890130256, 48,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-944748869, 14,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-415134015, 434,
			740093634, 312,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-873564465, 338,
			1526537935, 658,
			-2121935151, 636, // woodland walk
			408985298, 637,
		-1, -1,
			1814357716, 374,
		-1, -1, -1, -1,
			547534551, 565,
		-1, -1,
			399048409, 13,
		-1, -1, -1, -1,
			-1309477156, 106,
		-1, -1, -1, -1,
			-677982497, 679,
		-1, -1, -1, -1,
			-1618729246, 342,
		-1, -1, -1, -1,
			529929957, 256,
		-1, -1, -1, -1,
			-1178579224, 651, // ithell
		-1, -1,
			-1532936470, 684,
			-43712789, 400, // scape original
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			627705588, 16, // scape main default
		-1, -1, -1, -1,
			-1773920521, 389,
		-1, -1,
			1363656441, 110,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-751366401, 543,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-1037172987, 105,
			3225350, 1,
			-649601274, 499,
		-1, -1,
			3530505, 441, // sire
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-694094064, 177,
			-159400175, 644, // iowerths_lament
		-1, -1,
			694847251, 188,
			-1955797228, 531,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-1487589606, 363,
			544229147, 382,
			2001751835, 465,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-1220755677, 97,
			792536868, 131,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-628963539, 276,
			1343649581, 371,
			-123912401, 134,
			1377351472, 103,
			-1021014225, 481,
			-1877545169, 506,
			-1741764817, 548,
			1615933233, 677,
			1396043573, 607,
		-1, -1, -1, -1, -1, -1,
			1301622585, 275,
		-1, -1, -1, -1, -1, -1, -1, -1,
			-2136649922, 594,
		-1, -1, -1, -1,
			135141185, 449,
		-1, -1, -1, -1,
			-672706748, 65,
			-778471612, 599,
			2054833990, 570, // maiden ambience
			896171846, 624,
			-2122174648, 616,
			-2129105081, 641, // sarachnis_lair
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-6389935, 676,
			-1580150958, 31,
			-468596910, 273,
			-907669678, 471,
		-1, -1,
			1447063382, 367,
			2049005399, 516,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			1250412381, 619, // spy games
			-1154441378, 6,
		-1, -1, -1, -1, -1, -1, -1, -1,
			466902883, 470,
			-1224099996, 595,
		-1, -1,
			95997798, 126,
		-1, -1, -1, -1, -1, -1, -1, -1,
			-8976533, 379,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-1418827919, 298,
		-1, -1, -1, -1, -1, -1,
			1690742645, 443,
			3075958, 326,
			-720253066, 355,
		-1, -1, -1, -1, -1, -1,
			-2078908549, 242,
			-96104580, 669,
		-1, -1, -1, -1, -1, -1,
			-378865792, 185,
			1398587265, 163,
		-1, -1, -1, -1, -1, -1,
			1312917381, 618,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			375695247, 403,
			-1249495153, 409,
			939546513, 452,
			-2092714094, 277,
			1366257555, 127,
			-127408236, 416,
			295831445, 190,
			213399440, 687,
		-1, -1,
			-711467112, 350,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			1216634785, 164,
			-275310687, 176,
			-1685231711, 325,
			1761839009, 593, // my2arm_boss_battle
		-1, -1, -1, -1, -1, -1,
			-170561624, 129,
			3522472, 290,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			1339486127, 170,
			-1624762449, 564, // xarpus combat
		-1, -1,
			1705947058, 478,
		-1, -1, -1, -1, -1, -1, -1, -1,
			1038911415, 22,
		-1, -1, -1, -1, -1, -1,
			-782211141, 34,
		-1, -1,
			2110556093, 377,
		-1, -1,
			108392383, 329,
			-2130741313, 460,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			922007495, 140,
			-493822008, 137, // jormungand defeated jingle
		-1, -1,
			-200388662, 320,
		-1, -1, -1, -1, -1, -1,
			-1236252722, 202,
			-1228392498, 247,
		-1, -1, -1, -1, -1, -1,
			1120933843, 0, // scape main
			-1221427244, 578, // pestilent bloat ambience
		-1, -1, -1, -1, -1, -1,
			346263512, 240,
			781557721, 442,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			4820960, 459,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			582031337, 95,
		-1, -1, -1, -1,
			124995564, 46,
			1209941997, 557,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			-1063411723, 187,
		-1, -1, -1, -1, -1, -1,
			1814452217, 654,
		-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
			497375231, 319
	};

	private static String tracksTempDir = System.getenv("LOCALAPPDATA") + File.separator + "rl_tracks" + File.separator;

	private static final Djb2Manager djb2 = new Djb2Manager();

	private static final String[] attempts = {""};

	private static int hash2match = -751366401;

	private static ArrayList<Integer> matches = new ArrayList<>();

	public static void main(String[] args) throws IOException, MidiUnavailableException, InvalidMidiDataException, InterruptedException, LineUnavailableException
	{
//        boolean matched = false;
//        for (String s : attempts)
//        {
//            if (getNameHash(s) == hash2match)
//            {
//                System.out.printf("\"%s\" MATCHED! -> %d\n", s, hash2match);
//                matched = true;
//                break;
//            }
//        }
//        if (!matched) System.out.println("NO MATCH FOUND");

//        System.out.printf("track id = %d\n", getIdByHash(getNameHash("harmony")));

		File tempDir = new File(tracksTempDir);
		if (!tempDir.exists())
			Files.createDirectories(Path.of(tracksTempDir));

		String cacheDir = "";

		if (args.length == 1)
		{
			cacheDir = args[0] + File.separator;
		}
		else
		{
			cacheDir = System.getProperty("user.home") + File.separator + "jagexcache" + File.separator;
			cacheDir += "oldschool" + File.separator + "LIVE" + File.separator;
		}

		System.out.printf("loading music tracks from cache @ [%s] saving tracks to [%s]\n", cacheDir, tracksTempDir);

		Store store = Cache.loadStore(cacheDir);

		showTracks(store);
//        for (int i : SONG_NAME_HASHES)
//        {
//            if (i!=-1 && Math.abs(i)>1000 && !matches.contains(i))
//                System.out.println(i);
//        }

		Scanner in = new Scanner(System.in);
		int trackId = 0;
		do
		{
			System.out.print("Please enter track id to play: ");
			trackId = in.nextInt();

			if (trackId < -1)
				System.out.println("invalid track id entered!");
			else
			{
				System.out.printf("Playing track id: %d\n", trackId);
				playTrack(trackId, store);
			}
		} while (trackId != -1);
	}

	public static void showTracks(Store store) throws IOException
	{
		Index index = store.getIndex(IndexType.CONFIGS);
		Archive archive = index.getArchive(ConfigType.ENUM.getId());

		Storage storage = store.getStorage();
		byte[] archiveData = storage.loadArchive(archive);
		ArchiveFiles files = archive.getFiles(archiveData);

		FSFile tracks = null;
		for (FSFile file : files.getFiles())
		{
			if (file.getFileId() == 812)
				tracks = file;
		}

		if (tracks == null) return;

		System.out.println("Tracks enum found!");
		EnumLoader enumLoader = new EnumLoader();

		byte[] b = tracks.getContents();
		EnumDefinition def = enumLoader.load(tracks.getFileId(), b);

		if (def == null) throw new IOException("unable to get enum def");

		String[] trackTitles = def.getStringVals();

		System.out.println("Songs:");
		for (int entry : def.getKeys())
		{
			int dex = entry - 1;
			String title = trackTitles[dex];
			String song_hash_key = title.toLowerCase().replaceAll("&", "and");

			int id = getIdByHash(getNameHash(song_hash_key));
			if (id == -1)
			{
				song_hash_key = song_hash_key.replaceAll("(\\.|,|'|!)", "");
				id = getIdByHash(getNameHash(song_hash_key));
			}
			if (id == -1)
			{
				song_hash_key = song_hash_key.replaceAll("\\s2", "2");
				id = getIdByHash(getNameHash(song_hash_key));
			}
			if (id == -1)
			{
				String[] splits = song_hash_key.split("\\s");
				if (splits.length == 2)
				{
					id = getIdByHash(getNameHash(splits[1] + " " + splits[0]));
					if (id != -1) song_hash_key = splits[1] + " " + splits[0];
					else
					{
						id = getIdByHash(getNameHash(splits[1] + splits[0]));
						if (id != -1) song_hash_key = splits[1] + splits[0];
					}
				}
			}
			if (id == -1)
			{
				String temp = song_hash_key.replaceAll("(\\sand|the\\s)", "");
				int x = getIdByHash(getNameHash(temp));
				if (x != -1)
				{
					song_hash_key = temp;
					id = x;
				}
			}
			if (id == -1)
			{
				song_hash_key = song_hash_key.replaceAll("\\s", "_");
				id = getIdByHash(getNameHash(song_hash_key));
			}
			if (id == -1)
			{
				String temp = song_hash_key.replaceAll("(_and|the_)", "");
				song_hash_key = temp;
				id = getIdByHash(getNameHash(song_hash_key));
			}
			if (id == -1)
			{
				song_hash_key = song_hash_key.replaceAll("_", "");
				id = getIdByHash(getNameHash(song_hash_key));
			}
			if (id == -1)
			{
				song_hash_key = song_hash_key.replaceAll("dorgeshuun", "dorgeshun ");
				id = getIdByHash(getNameHash(song_hash_key));
			}
			if (id == -1)
			{
				switch (song_hash_key)
				{
					case "undergroundpass":
						song_hash_key = "upass";
						break;
					case "etceteria":
						song_hash_key = "etcetera";
						break;
					case "pharaohstomb":
						song_hash_key = "pharoah's tomb";
						break;
					case "eaglespeak":
						song_hash_key = "eagle peak";
						break;
					case "chefsurprise":
						song_hash_key = "chef surprize";
						break;
					case "allsfairyinlovewar":
						song_hash_key = "alls fairy in love n war";
						break;
					case "nightofvampyre":
						song_hash_key = "night of the vampiyre";
						break;
					case "bunnyssugarrush":
						song_hash_key = "bunny_sugar_rush";
						break;
					case "morulrek":
						song_hash_key = "mor-ul-rek";
						break;
					case "winterfunfair":
						song_hash_key = "winter funfare";
						break;
					case "gauntlet":
						song_hash_key = "gauntlet_minigame";
						break;
					case "arcane":
						song_hash_key = "zeah_magic";
						break;
					case "maze":
						song_hash_key = "melzars maze";
						break;
					case "downbydocks":
						song_hash_key = "zeah_fishing";
						break;
					case "militia":
						song_hash_key = "zeah_combat";
						break;
					case "dwarvendomain":
						song_hash_key = "zeah_mining";
						break;
					case "countryjig":
						song_hash_key = "zeah_farming";
						break;
					case "doorsofdinh":
						song_hash_key = "wasteland";
						break;
					case "bane":
						song_hash_key = "corporealbeast";
						break;
					case "invader":
						song_hash_key = "sire";
						break;
					case "icefire":
						song_hash_key = "wintertodt_boss";
						break;
					case "marchofshayzien":
						song_hash_key = "shayzien_march";
						break;
					case "fireindeep":
						song_hash_key = "olm_battle";
						break;
					case "tempest":
						song_hash_key = "gargoyleboss";
						break;
					case "relics":
						song_hash_key = "dragonkin temple";
						break;
					case "mythical":
						song_hash_key = "myths guild";
						break;
					case "onthinice":
						song_hash_key = "zombie dragon";
						break;
					case "walkingdead":
						song_hash_key = "shayzien crypt";
						break;
					case "forsaken":
						song_hash_key = "dragonkin ambience";
						break;
					case "maidenssorrow":
						song_hash_key = "maiden ambience";
						break;
					case "maidensanger":
						song_hash_key = "maiden combat";
						break;
					case "welcometomynightmare":
						song_hash_key = "pestilent bloat ambience";
						break;
					case "nightmarecontinues":
						song_hash_key = "pestilent bloat combat";
						break;
					case "darkbeastsotetseg":
						song_hash_key = "sotetseg ambience";
						break;
					case "powerofshadowrealm":
						song_hash_key = "sotetseg combat";
						break;
					case "itsnotovertil":
						song_hash_key = "verzik ambience";
						break;
					case "fatladysings":
						song_hash_key = "verzik combat";
						break;
					case "curtaincloses":
						song_hash_key = "verzik defeated";
						break;
					case "danceofnylocas":
						song_hash_key = "nylocas ambience";
						break;
					case "arachnidsofvampyrium":
						song_hash_key = "nylocas combat";
						break;
					case "predatorxarpus":
						song_hash_key = "xarpus ambience";
						break;
					case "lastkingofyarasa":
						song_hash_key = "xarpus combat";
						break;
					case "lumbering":
						song_hash_key = "weiss_town";
						break;
					case "snowflakemyarm":
						song_hash_key = "my2arm_love_theme_full";
						break;
					case "motherruckus":
						song_hash_key = "my2arm_boss_battle";
						break;
					case "awalkinwoods":
						song_hash_key = "woodland walk";
						break;
					case "alchemicalattack":
						song_hash_key = "alchemical hydra";
						break;
					case "athorninmyside":
						song_hash_key = "hespori";
						break;
					case "onfrontline":
						song_hash_key = "battlefront";
						break;
					case "servantsofstrife":
						song_hash_key = "molch";
						break;
					case "creepingvines":
						song_hash_key = "hespori cave";
						break;
					case "aforgottenreligion":
						song_hash_key = "forthos_dungeon";
						break;
					case "sarachnis":
						song_hash_key = "sarachnis_lair";
						break;
					case "iorwerthslament":
						song_hash_key = "iowerths_lament";
						break;
					case "seedofcrwys":
						song_hash_key = "cryws";
						break;
					case "architectsofprifddinas":
						song_hash_key = "ithell";
						break;
					case "spurneddemon":
						song_hash_key = "zalcano_combat";
						break;
					case "sharpendofcrystal":
						song_hash_key = "prif_slayer_dungeon";
						break;
					case "songofelves":
						song_hash_key = "warped_library";
						break;
					case "elvenguardians":
						song_hash_key = "city_guardians";
						break;
					case "fragment":
						song_hash_key = "the dark fragment";
						break;
					case "mysticsofnature":
						song_hash_key = "amlodd";
						break;
					case "baneofashihama":
						song_hash_key = "nightmare_combat";
						break;
					case "everlastingslumber":
						song_hash_key = "slepe dungeon";
						break;
					case "reignofbasilisk":
						song_hash_key = "jormungand fight";
						break;
					case "watchyourstep":
						song_hash_key = "hallowed sepulchre";
						break;
					case "vampyreassault":
						song_hash_key = "vanstrom";
						break;
					default:
						break;
				}

				id = getIdByHash(getNameHash(song_hash_key));
			}

			if (id == -1)
				System.out.printf("%s (%s) -> %d\n", title, song_hash_key, id);
			else
				matches.add(getNameHash(song_hash_key));

			//System.out.printf("%s(\"%s\", %d),\n", song_hash_key.replaceAll("('|!)", "").replaceAll("(\\s|-)", "_").toUpperCase(), title, id);
		}
	}

	public static int getNameHash(CharSequence str)
	{
		int stop = str.length();
		int hash = 0;

		for (int var4 = 0; var4 < stop; ++var4)
			hash = (hash << 5) - hash + encodedChar(str.charAt(var4));

		return hash;
	}

	public static int getIdByHash(int var1)
	{
		int var3 = (SONG_NAME_HASHES.length >> 1) - 1;
		int var4 = var1 & var3;

		while (true)
		{
			int var5 = SONG_NAME_HASHES[var4 + var4 + 1];
			if (-1 == var5)
				return -1;

			if (var1 == SONG_NAME_HASHES[var4 + var4])
				return var5;

			var4 = 1 + var4 & var3;
		}
	}

	public static byte encodedChar(char c)
	{
		byte var2;
		if (c >= 1 && c <= 127 || c >= 160 && c <= 255)
		{
			var2 = (byte)c;
		}
		else if (c == 8364)
		{
			var2 = -128;
		}
		else if (8218 == c)
		{
			var2 = -126;
		}
		else if (402 == c)
		{
			var2 = -125;
		}
		else if (c == 8222)
		{
			var2 = -124;
		}
		else if (8230 == c)
		{
			var2 = -123;
		}
		else if (c == 8224)
		{
			var2 = -122;
		}
		else if (8225 == c)
		{
			var2 = -121;
		}
		else if (710 == c)
		{
			var2 = -120;
		}
		else if (c == 8240)
		{
			var2 = -119;
		}
		else if (352 == c)
		{
			var2 = -118;
		}
		else if (8249 == c)
		{
			var2 = -117;
		}
		else if (c == 338)
		{
			var2 = -116;
		}
		else if (c == 381)
		{
			var2 = -114;
		}
		else if (8216 == c)
		{
			var2 = -111;
		}
		else if (8217 == c)
		{
			var2 = -110;
		}
		else if (8220 == c)
		{
			var2 = -109;
		}
		else if (c == 8221)
		{
			var2 = -108;
		}
		else if (8226 == c)
		{
			var2 = -107;
		}
		else if (c == 8211)
		{
			var2 = -106;
		}
		else if (c == 8212)
		{
			var2 = -105;
		}
		else if (c == 732)
		{
			var2 = -104;
		}
		else if (8482 == c)
		{
			var2 = -103;
		}
		else if (353 == c)
		{
			var2 = -102;
		}
		else if (8250 == c)
		{
			var2 = -101;
		}
		else if (c == 339)
		{
			var2 = -100;
		}
		else if (382 == c)
		{
			var2 = -98;
		}
		else if (376 == c)
		{
			var2 = -97;
		}
		else
		{
			var2 = 63;
		}

		return var2;
	}

	public static void playTrack(int trackId, Store store) throws IOException, MidiUnavailableException, InvalidMidiDataException, InterruptedException, LineUnavailableException
	{
		if (trackId < 0)
		{
			System.out.println("invalid track id to play");
			return;
		}

		Storage storage = store.getStorage();
		Index songs = store.getIndex(IndexType.TRACK1);
		Index jingles = store.getIndex(IndexType.TRACK2);

		List<Archive> songsList = songs.getArchives();
		List<Archive> jinglesList = jingles.getArchives();

		String trackFile = "";
		Archive archive = null;

		System.out.printf("songs: count=%d [%d, %d]\n", songsList.size(), 0, songsList.size() - 1);
		System.out.printf("jingles: count=%d [%d, %d]\n", jinglesList.size(), songsList.size(), songsList.size() + jinglesList.size() - 1);

		if (trackId > songsList.size() + jinglesList.size() - 1)
			System.out.println("track id exceeds total track count");
		else if (trackId > songsList.size() - 1)
		{
			System.out.printf("playing jingle from archive%d\n", IndexType.TRACK2.getNumber());
			archive = jinglesList.get(trackId - songsList.size());
		}
		else
		{
			System.out.printf("playing song from archive%d\n", IndexType.TRACK1.getNumber());
			archive = songsList.get(trackId);
		}

		if (dump_tracks && archive != null)
		{
			trackFile = dumpTrackArchive(storage, archive);
			System.out.printf("dumped to: %s\n", trackFile);

			return;
		}

		if (archive == null) throw new IOException("Failed to read track archive from cache");

		byte[] contents = archive.decompress(storage.loadArchive(archive));
		if (contents == null) throw new IOException("track not found!");

		TrackLoader trackLoader = new TrackLoader();
		TrackDefinition def = trackLoader.load(contents);

		contents = def.midi;

		try
		{
			InputStream trackData = new ByteArrayInputStream(contents);
			Sequencer sequencer = MidiSystem.getSequencer(); // Get the default Sequencer
			if (sequencer == null)
			{
				System.err.println("Sequencer device not supported");
				return;
			}
			sequencer.open(); // Open device
			// Create sequence, the File must contain MIDI file data.
			Sequence sequence = MidiSystem.getSequence(trackData);

			for (Track t : sequence.getTracks())
			{
				for (int channel = 0; channel < 16; channel++)
					t.add(new MidiEvent(new ShortMessage(ShortMessage.CONTROL_CHANGE, channel, 7, 25), t.ticks()));
			}

			sequencer.setSequence(sequence); // load it into sequencer

			System.out.print("Playing audio track... ");
			sequencer.start();  // start the playback

			long duration = sequence.getMicrosecondLength() / 1000;
			long seconds = duration / 1000;

			System.out.printf("Duration: %d ms\n", duration);
			System.out.printf("Track length: %d:%d\n", seconds / 60, seconds % 60);

			Thread.sleep(duration);

			sequencer.close();
			System.out.println("end of play.");
		}
		catch (MidiUnavailableException | InvalidMidiDataException | IOException ex)
		{
			ex.printStackTrace();
		}
	}

	private static String dumpTrackArchive(Storage storage, Archive archive) throws IOException
	{
		byte[] contents = archive.decompress(storage.loadArchive(archive));
		if (contents == null) throw new IOException("track not found!");

		TrackLoader loader = new TrackLoader();
		TrackDefinition def = loader.load(contents);

		String name;
		if (archive.getNameHash() != 0)
		{
			name = djb2.getName(archive.getNameHash());
			if (name == null)
				name = "name-" + archive.getNameHash();
		}
		else
			name = "archive-" + archive.getArchiveId();

		File dest = new File(tracksTempDir, name + ".midi");
		com.google.common.io.Files.write(def.midi, dest);
		return dest.getAbsolutePath();
	}
}
